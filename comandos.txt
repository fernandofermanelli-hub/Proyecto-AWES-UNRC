üè† CONFIGURACI√ìN INICIAL

git config --global user.name "Tu Nombre"          # Configura tu nombre
git config --global user.email "tu@email.com"      # Configura tu email
git config --list                                  # Muestra configuraci√≥n actual
git --version                                      # Verifica versi√≥n de Git

üìÅ INICIALIZACI√ìN Y CLONACI√ìN

git init                                          # Crea nuevo repositorio local
git clone [url]                                   # Descarga repositorio existente
git status                                        # Muestra estado de archivos
git status -s                                     # Estado resumido

üì§ CICLO B√ÅSICO DE TRABAJO

git add [archivo]                                 # Agrega archivo espec√≠fico
git add .                                         # Agrega TODOS los archivos nuevos/modificados
git add -A                                        # Agrega TODO (incluye eliminados)
git commit -m "mensaje descriptivo"               # Guarda cambios con mensaje
git commit -am "mensaje"                          # Agrega y commit en un paso
git push                                          # Sube cambios al repositorio remoto
git pull                                          # Descarga cambios del remoto

üîç VER INFORMACI√ìN E HISTORIAL

git log                                           # Muestra historial completo
git log --oneline                                 # Historial compacto
git log --graph                                   # Historial con diagrama de ramas
git log -p                                        # Historial con cambios detallados
git show [commit-hash]                            # Muestra cambios de un commit
git diff                                          # Muestra cambios no guardados
git diff [archivo]                                # Cambios en archivo espec√≠fico
git diff --staged                                 # Cambios en staging
git blame [archivo]                               # Qui√©n hizo cada cambio

üåø GESTI√ìN DE RAMAS (BRANCHES)

git branch                                        # Lista ramas locales
git branch -a                                     # Lista TODAS las ramas (locales y remotas)
git branch [nombre-rama]                          # Crea nueva rama
git branch -d [nombre-rama]                       # Elimina rama local
git branch -D [nombre-rama]                       # Elimina rama forzadamente
git checkout [nombre-rama]                        # Cambia a rama existente
git checkout -b [nombre-rama]                     # Crea y cambia a nueva rama
git switch [nombre-rama]                          # Alternativa moderna a checkout
git switch -c [nombre-rama]                       # Crea y cambia (moderno)
git merge [nombre-rama]                           # Fusiona rama con la actual
git rebase [nombre-rama]                          Reaplica commits (limpiar historial)

üì° TRABAJO CON REPOSITORIOS REMOTOS

git remote -v                                     # Muestra repositorios remotos
git remote add [nombre] [url]                     # Agrega nuevo remoto
git remote remove [nombre]                        # Elimina remoto
git push -u origin [rama]                         # Primer push (crea rama remota)
git push origin [rama]                            # Push a rama espec√≠fica
git push --all                                    # Push de todas las ramas
git push --tags                                   # Push de etiquetas
git fetch                                         # Descarga cambios sin fusionar
git fetch --all                                   # Descarga todo de todos los remotos
git pull origin [rama]                            # Descarga y fusiona rama espec√≠fica

‚è™ DESHACER CAMBIOS Y CORRECCIONES

git restore [archivo]                             # Descarta cambios no guardados
git restore --staged [archivo]                    # Quita del √°rea de staging
git reset [commit]                                # Elimina commits (mantiene cambios)
git reset --hard [commit]                         # Elimina commits y cambios
git revert [commit]                               # Crea commit que deshace cambios
git clean -fd                                     # Elimina archivos no rastreados
git commit --amend                                # Corrige √∫ltimo commit

üö® SOLUCI√ìN DE PROBLEMAS COMUNES

# Error: "no upstream branch"
git push -u origin [nombre-rama]

# Configurar auto-setup para futuras ramas
git config --global push.autoSetupRemote true

# Olvid√© agregar archivos al √∫ltimo commit
git add [archivo-olvidado]
git commit --amend

# Deshacer √∫ltimo commit pero mantener cambios
git reset --soft HEAD~1

# Recuperar archivo eliminado
git checkout [commit] -- [archivo]

üéØ FLUJOS DE TRABAJO COMUNES

git pull origin main
# Trabajar en cambios...
git add .
git commit -m "descripci√≥n"
git push origin main
git checkout -b nueva-funcionalidad
# Trabajar en cambios...
git add .
git commit -m "a√±ade nueva funcionalidad"
git push -u origin nueva-funcionalidad
# Crear Pull Request en GitHub
